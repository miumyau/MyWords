import SwiftUI
struct AddWordsPopover: View {
    // MARK: - Properties
    @Binding var showAddWordsPopover: Bool // –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–ª–æ–≤
    @Binding var words: String // –í–≤–µ–¥–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤
    @Binding var hours: String // –í–≤–µ–¥–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤ —Ä–∞–±–æ—Ç—ã
    @Binding var place: String // –í–≤–µ–¥–µ–Ω–Ω–æ–µ –º–µ—Å—Ç–æ —Ä–∞–±–æ—Ç—ã
    @Binding var mood: String // –í—ã–±—Ä–∞–Ω–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ
    @State private var showEmojiSelection = false // –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —ç–º–æ–¥–∑–∏
    //MARK: - Functions
    // –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª–µ–π
    private func resetStatsFields() {
        words = ""
        place = ""
        hours = ""
        mood = "ü§©"
    }
    // MARK: - Body
    var body: some View {
        VStack(spacing: 20) {
            // –ü–æ–ª–µ –≤–≤–æ–¥–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–ª–æ–≤
            TextField("0", text: $words)
                .font(.custom("MontserratAlternates-Regular", size: 16))
                .foregroundColor(.black)
                .multilineTextAlignment(.center)
                .padding(.horizontal)
            Text(correctWordsDeclension(for: words))
                .font(.custom("MontserratAlternates-Regular", size: 16))
                .foregroundColor(.black)
                .multilineTextAlignment(.center)
                .padding(.horizontal)
            // –ü–æ–ª–µ –≤–≤–æ–¥–∞ –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞–±–æ—Ç—ã
            HStack {
                Text("–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã")
                    .font(.custom("MontserratAlternates-Regular", size: 16))
                    .foregroundColor(.black)
                    .padding(.leading, 20)
                    .frame(width: 120, alignment: .leading)
                Spacer()
                HStack {
                    TextField("0", text: $hours)
                        .font(.custom("MontserratAlternates-Regular", size: 16))
                        .foregroundColor(.black)
                        .multilineTextAlignment(.trailing)
                        .frame(width: 30)
                    Text(correctHoursDeclension(for: Int(hours) ?? 0))
                        .font(.custom("MontserratAlternates-Regular", size: 16))
                        .foregroundColor(.black)
                        .multilineTextAlignment(.trailing)
                }
                .frame(maxWidth: .infinity, alignment: .trailing)
                .padding(.trailing, 35)
            }
            // –ü–æ–ª–µ –≤–≤–æ–¥–∞ –º–µ—Å—Ç–∞ —Ä–∞–±–æ—Ç—ã
            HStack {
                Text("–ú–µ—Å—Ç–æ —Ä–∞–±–æ—Ç—ã")
                    .font(.custom("MontserratAlternates-Regular", size: 16))
                    .foregroundColor(.black)
                    .padding(.leading, 20)
                    .frame(width: 120, alignment: .leading)
                Spacer()
                TextField("–≥–¥–µ-—Ç–æ", text: $place)
                    .font(.custom("MontserratAlternates-Regular", size: 16))
                    .foregroundColor(.black)
                    .multilineTextAlignment(.trailing)
                    .frame(maxWidth: .infinity, alignment: .trailing)
                    .padding(.horizontal)
            }
            .padding(.trailing, 20)
            // –ö–Ω–æ–ø–∫–∞ –≤—ã–±–æ—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
            HStack {
                Text("–ù–∞—Å—Ç—Ä–æ–π")
                    .font(.custom("MontserratAlternates-Regular", size: 16))
                    .foregroundColor(.black)
                    .padding(.leading, 20)
                    .frame(width: 120, alignment: .leading)
                Spacer()
                Button(action: {
                    showEmojiSelection = true
                }) {
                    Text(mood)
                        .font(.custom("MontserratAlternates-Regular", size: 16))
                        .padding()
                        .foregroundColor(.white)
                        .background(Color.white)
                }
                .actionSheet(isPresented: $showEmojiSelection) {
                    ActionSheet(title: Text("–ù–∞—Å—Ç—Ä–æ–π"), buttons: [
                        .default(Text("ü§©")) { mood = "ü§©" },
                        .default(Text("üòå")) { mood = "üòå" },
                        .default(Text("üòé")) { mood = "üòé" },
                        .default(Text("üò±")) { mood = "üò±" },
                        .default(Text("üò†")) { mood = "üò†" },
                        .cancel(Text("–û—Ç–º–µ–Ω–∞"))
                    ])
                }
            }
            .padding(.trailing, 40)
            // –ö–Ω–æ–ø–∫–∏ –û—Ç–º–µ–Ω–∞ –∏ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
            HStack {
                Button(action: {
                    resetStatsFields()
                    showAddWordsPopover = false
                }) {
                    Text("–û—Ç–º–µ–Ω–∞")
                        .font(.custom("MontserratAlternates-Regular", size: 16))
                        .padding()
                        .background(Color.red1)
                        .foregroundColor(.white)
                        .cornerRadius(25)
                }
                Spacer()
                Button(action: {
                    // –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
                    resetStatsFields()
                    showAddWordsPopover = false
                }) {
                    Text("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å")
                        .font(.custom("MontserratAlternates-Regular", size: 16))
                        .padding()
                        .background(Color.green1)
                        .foregroundColor(.white)
                        .cornerRadius(25)
                }
            }
            .padding(.top)
            .padding(.horizontal, 50)
        }
        .frame(width: 380, height: 380)
        .background(Color.white)
        .cornerRadius(25)
        .shadow(radius: 10)
    }
}




